import { NutritionCategory } from '@devvit/protos/community.js';
import type { LinkedBundle } from '@devvit/protos/index.js';
import type { Bundle } from '@devvit/protos/types/devvit/plugin/buildpack/buildpack_common.js';
/** Actor Plugins API as recorded in Prisma. */
type AppActorTypes = readonly {
    readonly name: string;
}[];
/** Actor Types API as recorded in Prisma. */
type AppActorPlugins = readonly {
    readonly fullname: string;
}[];
/** Subset of the Actor object recorded in Prisma.  */
type AppCapabilitiesActor = Readonly<{
    types: AppActorTypes;
    plugins: AppActorPlugins;
}>;
/**
 * Finds all of the capabilities that an app has based on its version.
 */
export declare function appCapabilitiesFromAppVersion(version: Readonly<{
    actors: AppCapabilitiesActor[];
    assets?: {
        webviewAsset: boolean;
    }[];
}>): NutritionCategory[];
/**
 * Finds all of the capabilities that an app has based on its actor.
 */
export declare function appCapabilitiesFromActor({ actorTypes, actorPlugins, hasAssets, hasWebView, }: {
    actorTypes: Readonly<AppActorTypes>;
    actorPlugins: Readonly<AppActorPlugins>;
    hasAssets: boolean;
    hasWebView: boolean;
}): NutritionCategory[];
/**
 * Finds all of the capabilities that an app has based on its linked bundle.
 */
export declare function appCapabilitiesFromLinkedBundle(bundle: Readonly<LinkedBundle>): NutritionCategory[];
/**
 * Finds all of the capabilities that an app has based on its bundle.
 */
export declare function appCapabilitiesFromBundle(bundle: Readonly<Bundle>): NutritionCategory[];
export {};
//# sourceMappingURL=AppCapabilities.d.ts.map